version: '3.8'
services:
  mysql:
    container_name: please-mysql
    image: mysql:8.2.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: shop-app
    ports:
      - '3307:3306'
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shopapp-network

  redis:
    image: docker.io/redis:7.2.3
    container_name: please-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - shopapp-network

    # zookeeper-01
  zookeeper-01:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper-01
    container_name: zookeeper-01
    networks:
      - shopapp-network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-01:2888:3888;zookeeper-02:2888:3888;zookeeper-03:2888:3888


     # zookeeper-02
  zookeeper-02:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper-02
    container_name: zookeeper-02
    networks:
      - shopapp-network
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-01:2888:3888;zookeeper-02:2888:3888;zookeeper-03:2888:3888


     # zookeeper-03
  zookeeper-03:
     image: confluentinc/cp-zookeeper:7.5.3
     hostname: zookeeper-03
     container_name: zookeeper-03
     networks:
       - shopapp-network
     ports:
       - "2183:2183"
     environment:
       ZOOKEEPER_CLIENT_PORT: 2183
       ZOOKEEPER_SERVER_ID: 3
       ZOOKEEPER_SERVERS: zookeeper-01:2888:3888;zookeeper-02:2888:3888;zookeeper-03:2888:3888

     # kafka-broker-01
  kafka-broker-01:
     image: confluentinc/cp-kafka:7.5.3
     hostname: kafka-broker-01
     container_name: kafka-broker-01
     networks:
       - shopapp-network
     depends_on:
       - zookeeper-01
       - zookeeper-02
       - zookeeper-03
     ports:
       - "9092:9092"
       - "29092:29092"
       - "9999:9999"
     environment:
       KAFKA_BROKER_ID: 1
       KAFKA_ZOOKEEPER_CONNECT: "zookeeper-01:2181,zookeeper-02:2182,zookeeper-03:2183"
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
       KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-01:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://kafka-broker-01:29092
       KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,DOCKER://0.0.0.0:29092

       KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL


       KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
       KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
       KAFKA_JMX_PORT: 9999
       KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
       CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker-01:29092
       CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
       CONFLUENT_METRICS_ENABLE: 'true'
       CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
       KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
       KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  app:
    container_name: spring_boot_app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mysql
    ports:
      - '8088:8088'
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/shop-app?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - shopapp-network

volumes:
  mysql-data:

networks:
  shopapp-network:
    name: shopapp-network
    driver: bridge